import { Configuration, ListResponseMessageOut, MessageIn, MessageOut } from "../openapi";
import { PostOptions } from "../util";
export interface MessageListOptions {
    limit?: number;
    iterator?: string | null;
    channel?: string;
    before?: Date | null;
    after?: Date | null;
    withContent?: boolean;
    tag?: string;
    eventTypes?: string[];
}
export declare class Message {
    private readonly api;
    constructor(config: Configuration);
    list(appId: string, options?: MessageListOptions): Promise<ListResponseMessageOut>;
    create(appId: string, messageIn: MessageIn, options?: PostOptions): Promise<MessageOut>;
    get(appId: string, msgId: string): Promise<MessageOut>;
    expungeContent(appId: string, msgId: string): Promise<void>;
}
export declare function messageInRaw(eventType: string, payload: string, contentType?: string): MessageIn;
