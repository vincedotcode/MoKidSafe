import { Configuration, IntegrationIn, IntegrationKeyOut, IntegrationOut, IntegrationUpdate, ListResponseIntegrationOut, Ordering } from "../openapi";
import { PostOptions } from "../util";
export interface IntegrationListOptions {
    limit?: number;
    iterator?: string | null;
    order?: Ordering;
}
export declare class Integration {
    private readonly api;
    constructor(config: Configuration);
    list(appId: string, options?: IntegrationListOptions): Promise<ListResponseIntegrationOut>;
    create(appId: string, integrationIn: IntegrationIn, options?: PostOptions): Promise<IntegrationOut>;
    get(appId: string, integId: string): Promise<IntegrationOut>;
    update(appId: string, integId: string, integrationUpdate: IntegrationUpdate): Promise<IntegrationOut>;
    delete(appId: string, integId: string): Promise<void>;
    getKey(appId: string, integId: string): Promise<IntegrationKeyOut>;
    rotateKey(appId: string, integId: string, options?: PostOptions): Promise<IntegrationKeyOut>;
}
