"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Endpoint = void 0;
const openapi_1 = require("../openapi");
class Endpoint {
    constructor(config) {
        this.api = new openapi_1.EndpointApi(config);
    }
    list(appId, options) {
        var _a;
        return this.api.v1EndpointList(Object.assign(Object.assign({ appId }, options), { iterator: (_a = options === null || options === void 0 ? void 0 : options.iterator) !== null && _a !== void 0 ? _a : undefined }));
    }
    create(appId, endpointIn, options) {
        return this.api.v1EndpointCreate(Object.assign({ appId,
            endpointIn }, options));
    }
    get(appId, endpointId) {
        return this.api.v1EndpointGet({
            appId,
            endpointId,
        });
    }
    update(appId, endpointId, endpointUpdate) {
        return this.api.v1EndpointUpdate({
            appId,
            endpointId,
            endpointUpdate,
        });
    }
    delete(appId, endpointId) {
        return this.api.v1EndpointDelete({
            appId,
            endpointId,
        });
    }
    patch(appId, endpointId, endpointPatch) {
        return this.api.v1EndpointPatch({
            appId,
            endpointId,
            endpointPatch,
        });
    }
    getHeaders(appId, endpointId) {
        return this.api.v1EndpointGetHeaders({
            appId,
            endpointId,
        });
    }
    updateHeaders(appId, endpointId, endpointHeadersIn) {
        return this.api.v1EndpointUpdateHeaders({
            appId,
            endpointId,
            endpointHeadersIn,
        });
    }
    headersUpdate(appId, endpointId, endpointHeadersIn) {
        return this.api.v1EndpointUpdateHeaders({
            appId,
            endpointId,
            endpointHeadersIn,
        });
    }
    patchHeaders(appId, endpointId, endpointHeadersPatchIn) {
        return this.api.v1EndpointPatchHeaders({
            appId,
            endpointId,
            endpointHeadersPatchIn,
        });
    }
    headersPatch(appId, endpointId, endpointHeadersPatchIn) {
        return this.api.v1EndpointPatchHeaders({
            appId,
            endpointId,
            endpointHeadersPatchIn,
        });
    }
    recover(appId, endpointId, recoverIn, options) {
        return this.api.v1EndpointRecover(Object.assign({ appId,
            endpointId,
            recoverIn }, options));
    }
    replayMissing(appId, endpointId, replayIn, options) {
        return this.api.v1EndpointReplayMissing(Object.assign({ appId,
            endpointId,
            replayIn }, options));
    }
    getSecret(appId, endpointId) {
        return this.api.v1EndpointGetSecret({
            appId,
            endpointId,
        });
    }
    rotateSecret(appId, endpointId, endpointSecretRotateIn, options) {
        return this.api.v1EndpointRotateSecret(Object.assign({ appId,
            endpointId,
            endpointSecretRotateIn }, options));
    }
    sendExample(appId, endpointId, eventExampleIn, options) {
        return this.api.v1EndpointSendExample(Object.assign({ appId,
            endpointId,
            eventExampleIn }, options));
    }
    getStats(appId, endpointId, options) {
        var _a, _b;
        return this.api.v1EndpointGetStats(Object.assign(Object.assign({ appId,
            endpointId }, options), { since: (_a = options === null || options === void 0 ? void 0 : options.since) !== null && _a !== void 0 ? _a : undefined, until: (_b = options === null || options === void 0 ? void 0 : options.until) !== null && _b !== void 0 ? _b : undefined }));
    }
    transformationGet(appId, endpointId) {
        return this.api.v1EndpointTransformationGet({
            appId,
            endpointId,
        });
    }
    transformationPartialUpdate(appId, endpointId, endpointTransformationIn) {
        return this.api.v1EndpointTransformationPartialUpdate({
            appId,
            endpointId,
            endpointTransformationIn,
        });
    }
    oauthUpdate(appId, endpointId, endpointOauthConfigIn) {
        return this.api.v1EndpointUpdateOauthConfig({
            appId,
            endpointId,
            endpointOauthConfigIn,
        });
    }
    oauthDelete(appId, endpointId) {
        return this.api.v1EndpointDeleteOauthConfig({
            appId,
            endpointId,
        });
    }
}
exports.Endpoint = Endpoint;
//# sourceMappingURL=endpoint.js.map