import { Configuration, Ordering, OperationalWebhookEndpointIn, OperationalWebhookEndpointOut, OperationalWebhookEndpointSecretIn, OperationalWebhookEndpointSecretOut, OperationalWebhookEndpointUpdate, ListResponseOperationalWebhookEndpointOut } from "../openapi";
import { PostOptions } from "../util";
export interface OperationalWebhookEndpointListOptions {
    limit?: number;
    iterator?: string | null;
    order?: Ordering;
}
export declare class OperationalWebhookEndpoint {
    private readonly api;
    constructor(config: Configuration);
    list(options?: OperationalWebhookEndpointListOptions): Promise<ListResponseOperationalWebhookEndpointOut>;
    create(endpointIn: OperationalWebhookEndpointIn, options?: PostOptions): Promise<OperationalWebhookEndpointOut>;
    get(endpointId: string): Promise<OperationalWebhookEndpointOut>;
    update(endpointId: string, endpointUpdate: OperationalWebhookEndpointUpdate): Promise<OperationalWebhookEndpointOut>;
    delete(endpointId: string): Promise<void>;
    getSecret(endpointId: string): Promise<OperationalWebhookEndpointSecretOut>;
    rotateSecret(endpointId: string, endpointSecretIn: OperationalWebhookEndpointSecretIn, options?: PostOptions): Promise<void>;
}
